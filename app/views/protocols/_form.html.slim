= form_for @protocol, html: { class: 'form-horizontal', role: 'form' } do |f|
  - if @protocol.errors.any?
    = model_errors(@protocol)

  div#step-one
    = render 'protocols/step/one', f: f, protocol: @protocol

  div#step-two
    = render 'protocols/step/two', f: f, protocol: @protocol

  div#step-three
    = render 'protocols/step/three', f: f, protocol: @protocol

javascript:
  $(function() {
    $('#go-to-two').click((e) => {
      let has_error = checkError(e);
      if (!has_error) {
        $('#step-one').hide();
        $('#step-two').show();
        $('#step-three').hide();
      }
    });
    $('#go-to-three').click(() => {
      $('#step-one').hide();
      $('#step-two').hide();
      $('#step-three').show();
    });
    $('#back-to-one').click(() => {
      $('#step-one').show();
      $('#step-two').hide();
      $('#step-three').hide();
    });
    $('#back-to-two').click(() => {
      $('#step-one').hide();
      $('#step-two').show();
      $('#step-three').hide();
    });

    $('#protocol_title_error').hide();
    $('#protocol_template_name_error').hide();
    $('#step-two').hide();
    $('#step-three').hide();
    $('#sponsor-other-form').hide();

    if (!$('#protocol_study_agent_1').prop('checked') && !$('#protocol_study_agent_2').prop('checked')) {
      $('#has-ind-form').hide();
    }
    if (!$('#protocol_study_agent_3').prop('checked')) {
      $('#has-ide-form').hide();
    }

    $('#protocol_sponsors').change(() => {
      if ($('#protocol_sponsors').children(':selected').last().text() === "#{I18n.t('protocols.step.one.sponsors').last()}") {
        $('#sponsor-other-form').show();
      } else {
        $('#sponsor-other-form').hide();
      }
    });

    $('.checkbox-form').change(() => {
      if ($('#protocol_study_agent_1').prop('checked') || $('#protocol_study_agent_2').prop('checked')) {
        $('#has-ind-form').show();
      } else {
        $('#has-ind-form').hide();
      }
      if ($('#protocol_study_agent_3').prop('checked')) {
        $('#has-ide-form').show();
      } else {
        $('#has-ide-form').hide();
      }
    });

    $('#step_one_submit_button').click((e) => {
      checkError(e);
    });

    function checkError(e) {
      let has_error = false;
      let error_fields = $('.error-field');
      if (error_fields.length > 0) {
        let title = $('#protocol_title').val();
        let template_name = $('#protocol_template_name').val();
        for (let i = 0; i < error_fields.length; i++) {
          $(error_fields[i]).replaceWith($(error_fields[i]).html());
        }
        $('#protocol_title').val(title);
        $('#protocol_title_error').hide();
        $('#protocol_template_name').val(template_name);
        $('#protocol_template_name_error').hide();
      }
      if ($('#protocol_title').val().length === 0) {
        showError(e);
        has_error = true;
      }
      if ('#{@protocol.new_record?}' == 'true' && $('#protocol_template_name').val().length === 0) {
        showTemplateError(e);
        has_error = true;
      }
      return has_error;
    }

    function showError(e) {
      e.preventDefault();
      let div = '<div class="field_with_errors error-field"></div>';
      $('label[for=protocol_title]').wrap(div);
      $('#protocol_title').wrap(div);
      $('#protocol_title_error').show();
      $('html, body').animate({ scrollTop: $('label[for=protocol_title]').offset().top });
    }

    function showTemplateError(e) {
      e.preventDefault();
      let div = '<div class="field_with_errors error-field"></div>';
      $('label[for=protocol_template_name]').wrap(div);
      $('#protocol_template_name').wrap(div);
      $('#protocol_template_name_error').show();
      $('html, body').animate({ scrollTop: $('label[for=protocol_template_name]').offset().top });
    }

    $(document).on("click", ".add-destroy", function() {
      $(this).prev().val(true);
      $(this).parent().parent().hide();
    });
  });
