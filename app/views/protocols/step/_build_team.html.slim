.modal-dialog
  .modal-content
    .modal-header
      button.close type="button" data-dismiss="modal" aria-label="Close"
        span aria-hidden="true" x
      h4.modal-title = t('.title')

    .modal-body
      p = t('.text')

      = form_tag add_team_protocols_path, class: 'form-horizontal', role: 'form' do
        .form-group
          = label_tag 'add_user', t('.user_label'), class: 'control-label'
          = select_tag 'add_user', options_from_collection_for_select(users, :id, :name),
                       class: 'form-control', include_blank: true
        .form-group
          = label_tag 'add_role', t('.role_label'), class: 'control-label'
          - roles = Participation.team_roles.map { |key, _value| [t("activerecord.enum.participation.role.#{key}"), key] }
          = select_tag 'add_role', options_for_select(roles), class: 'form-control', include_blank: true
        .form-group#add-sections
          - sections.each do |section|
            div
              label
                = check_box_tag 'add_section[]', section.no, false,
                                class: 'section-checkbox', id: "add-section-#{section.no}"
                = " #{section.no} #{section.title}"
        .form-group.pull-right
          = button_tag t('.cancel'), type: :button, class: 'btn btn-default', id: 'add-team-cancel-button'
          = submit_tag t('.add_user'), class: 'btn btn-default', id: 'add-team-button'

javascript:
  $(function() {
    function changeButtonState(state) {
      $('#add-team-button').prop('disabled', state);
    }

    function checkState() {
      var selected = $('#add_role').val();
      if (selected != '' && $('#add_user').val() != '') {
        if (selected == 'author' || selected == 'reviewer') {
          if ($('.section-checkbox:checked').length != 0) {
           changeButtonState(false);
          } else {
            changeButtonState(true);
          }
        } else {
          changeButtonState(false);
        }
      } else {
        changeButtonState(true);
      }
    }

    checkState();
    $('#add-sections').hide();

    $('#add_user, .section-checkbox').change(function() {
      checkState();
    });

    $('#add_role').change(function() {
      var selected = $('#add_role').val();
      if (selected == 'author' || selected == 'reviewer') {
        $('#add-sections').show();
      } else {
        $('#add-sections').hide();
      }
      checkState();
    });

    $('#add-team-cancel-button').click(function() {
      $('#team-modal').modal('hide');
    });

    // NOTE: 'remote: true' does not work, use this instead.
    $('#add-team-button').click(function(e) {
      e.preventDefault();
      var selected_sections = []
      var checked = $('.section-checkbox:checked');
      for (var i = 0; i < checked.length; i++) {
        selected_sections.push($($('.section-checkbox:checked')[i]).val());
      }
      $.ajax({
        type: 'post',
        dataType: 'script',
        data: {
          protocol_id: '#{protocol&.id}',
          user_id: $('#add_user').val(),
          role: $('#add_role').val(),
          sections: selected_sections,
          index: $('#team-member-list tr').length,
          template_name: '#{template_name}'
        },
        url: '#{add_team_protocols_path}'
      });
    });
  });
