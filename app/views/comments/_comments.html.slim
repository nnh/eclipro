- comments.each do |comment|
  - unless comment.new_record?
    div class="comment p-m mt-s mb-s #{'resolve-comment' if comment.resolve?}"
      .comment-header
        f.fa.fa-user.mr-xs
        = comment.user.name
        .pull-right
          f.fa.fa-clock-o.mr-xs
          = comment.created_at

      .comment-body
        = comment.body

      - unless comment.resolve?
        .comment-footer.text-right
          = button_tag t('.reply'), type: :button, class: 'btn btn-default reply-button',
                                    data: { url: reply_protocol_content_comments_path(protocol, content),
                                            parent_id: comment.id }
          - if comment.parent_id.nil?
            = button_tag t('.resolve'), type: :button, class: 'btn btn-default resolve-button',
                                        data: { url: resolve_protocol_content_comment_path(protocol, content, comment) }

      - replies = Comment.where(parent_id: comment.id)
      - if replies.present?
        .reply-comments.ml-xl
          = render 'comments', protocol: protocol, content: content, comments: replies

      .reply-form id="reply-#{comment.id}"
